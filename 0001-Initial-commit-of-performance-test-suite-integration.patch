From 2cdf29ed150f5b2ca7e497f82146f0c433d29c1d Mon Sep 17 00:00:00 2001
From: Filip Holec <fholec@redhat.com>
Date: Sat, 13 Apr 2013 23:00:14 +0200
Subject: [PATCH] Initial commit of performance test suite integration

---
 source/api.py |   80 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 80 insertions(+), 0 deletions(-)

diff --git a/source/api.py b/source/api.py
index 76da4d7..7a5fbae 100644
--- a/source/api.py
+++ b/source/api.py
@@ -2212,6 +2212,27 @@ class Bugs(Mutable):
         # Currently no caching for bugs, changes applied immediately
         pass
 
+    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+    #  Bugs Self Test
+    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+    class _test(unittest.TestCase):
+        def setUp(self):
+            """ Set up performance test configuration from the config """
+            self.performance = Nitrate()._config.performance
+
+        def test_performance_case_bugs(self):
+            """
+                Test finds test plan with the same string pattern and displays
+                test cases and bug numbers related to test cases
+            """
+            for testplan in\
+                    TestPlan.search(name__contains="Tier 1 / Apps"):
+                for testcase in testplan.testcases:
+                    if testcase.bugs != None:
+                        for bug in testcase.bugs:
+                            print "  Related bug:" , bug.synopsis
+                            print testcase.author , bug.bug
+
 
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #  Plan Tags Class
@@ -2376,6 +2397,8 @@ class CaseTags(Container):
         def setUp(self):
             """ Set up test case from the config """
             self.testcase = Nitrate()._config.testcase
+            self.performance = Nitrate()._config.performance
+
 
         def testTagging1(self):
             """ Untagging a test case """
@@ -2404,6 +2427,11 @@ class CaseTags(Container):
             testcase = TestCase(self.testcase.id)
             self.assertTrue("TestTag" not in testcase.tags)
 
+        def test_performance_check_tags(self):
+            """ Test prints tags from a test cases present in a test plan """
+            for case in TestPlan(self.performance.testplan):
+                print case, ": ", case.tags
+
 
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #  Test Plan Class
@@ -3364,6 +3392,7 @@ class TestCase(Mutable):
         def setUp(self):
             """ Set up test case from the config """
             self.testcase = Nitrate()._config.testcase
+            self.performance = Nitrate()._config.performance
 
         def testCreateInvalid(self):
             """ Create a new test case (missing required parameters) """
@@ -3471,6 +3500,24 @@ class TestCase(Mutable):
                         self.assertEqual(testcase.autoproposed, autoproposed)
                         self.assertEqual(testcase.manual, manual)
 
+    def test_performance_search_testcases(self):
+        """
+            Test searches a pattern in all test cases and displays the result
+            with their testers
+        """
+        for testcase in TestCase.search(summary__contains="python"):
+            print "{0}: {1}".format(testcase.tester, testcase)
+
+    def test_performance_author_test_cases(self):
+        """
+            Test displays test cases from specified author and also test plans
+            which contain these test cases
+        """
+        for testcase in TestCase.search(author=self.performance.author):
+            print "{0} is in test plans:".format(testcase)
+            for testplan in testcase.testplans:
+                print "  {0}".format(testplan.name)
+
 
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #  Test Cases Class
@@ -3747,6 +3794,39 @@ class CaseRun(Mutable):
         # Update self (if modified)
         Mutable.update(self)
 
+    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+    #  Case Runs Self Test
+    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+    class _test(unittest.TestCase):
+        def setUp(self):
+            """ Set up performance test configuration from the config """
+            self.performance = Nitrate()._config.performance
+
+        def test_performance_update_caseruns(self):
+            """
+                Test for fetching caserun states from DB and updating them
+                focusing on the updating part
+            """
+            for caserun in TestRun(self.performance.testplan).caseruns:
+                print "{0} {1}".format(caserun.id, caserun.status)
+                caserun.status = Status("PASSED")
+                caserun.update()
+
+        def test_performance_case_runs(self):
+            """
+                Test for printing test cases that test run contains in
+                specified test plan (for example, test plans connected
+                to RHEL6.4).
+            """
+            for testplan in TestPlan.search(name__contains="rhel-6.4.0"):
+                print "{0}".format(testplan.name)
+                for testrun in testplan.testruns:
+                    print "  {0} {1} {2}".format(testrun, testrun.manager,\
+                            testrun.status)
+                    for caserun in testrun.caseruns:
+                        print "    {0} {1} {2}".format(caserun,\
+                                caserun.testcase, caserun.status)
+
 
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #  Self Test
-- 
1.7.1

