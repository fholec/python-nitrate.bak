From 7cdf6ffe6b62b37ebd0a622d8653647b7be1e4fe Mon Sep 17 00:00:00 2001
From: Filip Holec <fholec@redhat.com>
Date: Mon, 15 Apr 2013 19:10:12 +0200
Subject: [PATCH] Added MultiCall feature (CaseRun update)

---
 source/__init__.py |    2 +
 source/api.py      |   64 ++++++++++++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 64 insertions(+), 2 deletions(-)

diff --git a/source/__init__.py b/source/__init__.py
index e9a8b88..4bc8e1b 100644
--- a/source/__init__.py
+++ b/source/__init__.py
@@ -144,5 +144,7 @@ __all__ = """
         setColorMode COLOR_ON COLOR_OFF COLOR_AUTO
         set_log_level set_cache_level set_color_mode
         get_log_level get_cache_level get_color_mode
+        multicall_set multicall_get multicall_call
+        MULTICALL_ON MULTICALL_OFF ALLstatuses
         """.split()
 
diff --git a/source/api.py b/source/api.py
index 7a5fbae..9d8a3d0 100644
--- a/source/api.py
+++ b/source/api.py
@@ -24,6 +24,7 @@ import os
 import re
 import sys
 import types
+import random
 import optparse
 import unittest
 import xmlrpclib
@@ -33,6 +34,8 @@ import logging as log
 from pprint import pformat as pretty
 from xmlrpc import NitrateError, NitrateKerbXmlrpc
 
+ALLstatuses = ['PAD', 'IDLE', 'PASSED', 'FAILED', 'RUNNING', 'PAUSED',
+               'BLOCKED', 'ERROR', 'WAIVED']
 
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #  Logging
@@ -338,6 +341,58 @@ def ascii(text):
     if not isinstance(text, unicode): text = unicode(text)
     return unicodedata.normalize('NFKD', text).encode('ascii','ignore')
 
+# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+#  MultiCall methods
+# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+MULTICALL_ON = 1
+MULTICALL_OFF = 0
+
+def multicall_get():
+    """ Get current multicall mode """
+    return _multicall_mode
+
+def multicall_set(mode=None):
+    """
+    Set the multicall mode
+
+    If enabled, some objects (currently only from CaseRun class) will use
+    MultiCall for updating its states (thus speeding up the process).
+
+    Possible values are:
+
+    MULTICALL_ON ..... multicall enabled
+    MULTICALL_OFF .... multicall disabled
+
+    Link to RFE in Bugzilla:
+
+        https://bugzilla.redhat.com/show_bug.cgi?id=896493
+    """
+
+    global _multicall_mode
+    global multicall
+    if mode is None:
+        _multicall_mode = MULTICALL_OFF
+    else:
+        if mode > 1 or mode < 0:
+            raise NitrateError("Invalid multicall mode '{0}'".format(mode))
+        else:
+            _multicall_mode = mode
+    if mode == MULTICALL_ON:
+        multicall = xmlrpclib.MultiCall(Nitrate()._server)
+        set_cache_level(CACHE_OBJECTS)
+        log.info("In order to enable MultiCall feature, CACHE_CHANGES level\
+                will be used")
+    log.debug("MultiCall mode {0}".format(mode))
+
+def multicall_call():
+    """ Execute multicall query """
+
+    response = multicall()
+    return None
+
+multicall_set()
+
 
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #  Nitrate None Class
@@ -3782,7 +3837,10 @@ class CaseRun(Mutable):
 
         log.info("Updating case run " + self.identifier)
         log.debug(pretty(hash))
-        self._server.TestCaseRun.update(self.id, hash)
+        if multicall_get() == MULTICALL_OFF:
+            self._server.TestCaseRun.update(self.id, hash)
+        else:
+            multicall.TestCaseRun.update(self.id, hash)
 
     def update(self):
         """ Update self and containers, if modified, to the server """
@@ -3809,8 +3867,10 @@ class CaseRun(Mutable):
             """
             for caserun in TestRun(self.performance.testplan).caseruns:
                 print "{0} {1}".format(caserun.id, caserun.status)
-                caserun.status = Status("PASSED")
+                caserun.status = Status(ALLstatuses[random.randint(1,8)])
                 caserun.update()
+            if multicall_get() == 1:
+                multicall_call()
 
         def test_performance_case_runs(self):
             """
-- 
1.7.1

